<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
		<title>Zapatec DHTML Calendar: calendar-setup.js Source File</title>
		<link href="doxygen.css" rel="stylesheet" type="text/css">
		<link href="../../css/template.css" rel="stylesheet" type="text/css">
		<link href="../../css/zpcal.css" rel="stylesheet" type="text/css">
		</head><body>
		<div class="topMenuHeader"> 
			<div class="logo">
				<a href='http://www.zapatec.com/website/main/support.jsp'><img src='/website/main/images/logoNew.gif' alt='Zapatec Javascript Calendar' border='0' align='middle'></a>
				<span class='zpCalHeader'>
					DHTML Calendar Javascript Source Code Documentation
				</span>
			</div>
		</div>
<!-- Generated by Doxygen 1.4.1 -->
<div class="qindex"><a class="qindex" href="main.html">Main&nbsp;Page</a> | <a class="qindex" href="modules.html">Modules</a> | <a class="qindex" href="dirs.html">Directories</a> | <a class="qindex" href="files.html">File&nbsp;List</a> | <a class="qindex" href="globals.html">File&nbsp;Members</a></div>
<div class="nav">
<a class="el" href="dir_000000.html">src</a></div>
<h1>calendar-setup.js</h1><a href="calendar-setup_8js.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment">00001 <span class="comment">/*  </span>
00002 <span class="comment"> * The Zapatec DHTML Calendar</span>
00003 <span class="comment"> *</span>
00004 <span class="comment"> * Copyright (c) 2004 by Zapatec, Inc.</span>
00005 <span class="comment"> * http://www.zapatec.com</span>
00006 <span class="comment"> * 1700 MLK Way, Berkeley, California,</span>
00007 <span class="comment"> * 94709, U.S.A.  </span>
00008 <span class="comment"> * All rights reserved.</span>
00009 <span class="comment"> *</span>
00010 <span class="comment"> * Original version written by Mihai Bazon,</span>
00011 <span class="comment"> * http://www.bazon.net/mishoo/calendar.epl</span>
00012 <span class="comment"> *</span>
00013 <span class="comment"> * This file defines helper functions for setting up the calendar.  They are</span>
00014 <span class="comment"> * intended to help non-programmers get a working calendar on their site</span>
00015 <span class="comment"> * quickly.  This script should not be seen as part of the calendar.  It just</span>
00016 <span class="comment"> * shows you what one can do with the calendar, while in the same time</span>
00017 <span class="comment"> * providing a quick and simple method for setting it up.  If you need</span>
00018 <span class="comment"> * exhaustive customization of the calendar creation process feel free to</span>
00019 <span class="comment"> * modify this code to suit your needs (this is recommended and much better</span>
00020 <span class="comment"> * than modifying calendar.js itself).</span>
00021 <span class="comment"> */</span>
00022 
00023 <span class="comment">// $Id: calendar-setup.js,v 1.8 2005/04/19 00:47:32 dror Exp $</span>
00024 
<a name="l00070"></a><a class="code" href="calendar-setup_8js.html#a0">00070</a> <a class="code" href="utils_8js.html#a0">Zapatec</a>.Calendar.setup = function (params) {
00071         function param_default(pname, def) { <span class="keywordflow">if</span> (typeof params[pname] == <span class="stringliteral">"undefined"</span>) { params[pname] = def; } };
00072         param_default(<span class="stringliteral">"inputField"</span>,     null);
00073         param_default(<span class="stringliteral">"displayArea"</span>,    null);
00074         param_default(<span class="stringliteral">"button"</span>,         null);
00075         param_default(<span class="stringliteral">"eventName"</span>,      <span class="stringliteral">"click"</span>);
00076         param_default(<span class="stringliteral">"ifFormat"</span>,       <span class="stringliteral">"%Y/%m/%d"</span>);
00077         param_default(<span class="stringliteral">"daFormat"</span>,       <span class="stringliteral">"%Y/%m/%d"</span>);
00078         param_default(<span class="stringliteral">"singleClick"</span>,    <span class="keyword">true</span>);
00079         param_default(<span class="stringliteral">"disableFunc"</span>,    null);
00080         param_default(<span class="stringliteral">"dateStatusFunc"</span>, params[<span class="stringliteral">"disableFunc"</span>]); <span class="comment">// takes precedence if both are defined</span>
00081         param_default(<span class="stringliteral">"dateText"</span>,       null);
00082         param_default(<span class="stringliteral">"firstDay"</span>,       null);
00083         param_default(<span class="stringliteral">"align"</span>,          <span class="stringliteral">"Br"</span>);
00084         param_default(<span class="stringliteral">"range"</span>,          [1900, 2999]);
00085         param_default(<span class="stringliteral">"weekNumbers"</span>,    <span class="keyword">true</span>);
00086         param_default(<span class="stringliteral">"flat"</span>,           null);
00087         param_default(<span class="stringliteral">"flatCallback"</span>,   null);
00088         param_default(<span class="stringliteral">"onSelect"</span>,       null);
00089         param_default(<span class="stringliteral">"onClose"</span>,        null);
00090         param_default(<span class="stringliteral">"onUpdate"</span>,       null);
00091         param_default(<span class="stringliteral">"date"</span>,           null);
00092         param_default(<span class="stringliteral">"showsTime"</span>,      <span class="keyword">false</span>);
00093         param_default(<span class="stringliteral">"sortOrder"</span>,      <span class="stringliteral">"asc"</span>);
00094         param_default(<span class="stringliteral">"timeFormat"</span>,     <span class="stringliteral">"24"</span>);
00095         param_default(<span class="stringliteral">"electric"</span>,       <span class="keyword">true</span>);
00096         param_default(<span class="stringliteral">"step"</span>,           2);
00097         param_default(<span class="stringliteral">"position"</span>,       null);
00098         param_default(<span class="stringliteral">"cache"</span>,          <span class="keyword">false</span>);
00099         param_default(<span class="stringliteral">"showOthers"</span>,     <span class="keyword">false</span>);
00100         param_default(<span class="stringliteral">"multiple"</span>,       null);
00101         param_default(<span class="stringliteral">"saveDate"</span>,       null);
00102 
00103         var tmp = [<span class="stringliteral">"inputField"</span>, <span class="stringliteral">"displayArea"</span>, <span class="stringliteral">"button"</span>];
00104         <span class="keywordflow">for</span> (var i in tmp) {
00105                 <span class="keywordflow">if</span> (typeof params[tmp[i]] == <span class="stringliteral">"string"</span>) {
00106                         params[tmp[i]] = document.getElementById(params[tmp[i]]);
00107                 }
00108         }
00109         <span class="keywordflow">if</span> (!(params.flat || params.multiple || params.inputField || params.displayArea || params.button)) {
00110                 alert(<span class="stringliteral">"Calendar.setup:\n  Nothing to setup (no fields found).  Please check your code"</span>);
00111                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
00112         }
00113         <span class="keywordflow">if</span> (params.saveDate) { <span class="comment">//If saveDate is on We're saving the date in a cookie</span>
00114                 <span class="comment">//fetch the cookie</span>
00115                 var cookieName = window.location.href + <span class="stringliteral">"--"</span> + params.button.id;
00116                 var newdate = <a class="code" href="utils_8js.html#a0">Zapatec</a>.Utils.getCookie(cookieName);
00117                 <span class="keywordflow">if</span> (newdate != null) { <span class="comment">//if there's a cookie</span>
00118                         <span class="comment">//set the value of the text field</span>
00119                         document.getElementById(params.inputField.id).value = newdate;
00120                 }
00121         }
00122 
00123         function onSelect(cal) {
00124                 var p = cal.params;
00125                 var update = (cal.dateClicked || p.electric);
00126                 <span class="keywordflow">if</span> (update &amp;&amp; p.flat) {
00127                         <span class="keywordflow">if</span> (typeof p.flatCallback == <span class="stringliteral">"function"</span>)
00128                         {
00129                            <span class="keywordflow">if</span> (!p.multiple) <span class="comment">//User can call function submitFlatDates directly in Calendar object to handle the submission of multiple dates.</span>
00130                                 p.flatCallback(cal);
00131                         } <span class="keywordflow">else</span>
00132                                 alert(<span class="stringliteral">"No flatCallback given -- doing nothing."</span>);
00133                         <span class="keywordflow">return</span> <span class="keyword">false</span>;
00134                 }
00135                 <span class="keywordflow">if</span> (update &amp;&amp; p.inputField) {
00136                         p.inputField.value = cal.date.print(p.ifFormat);
00137                         <span class="keywordflow">if</span> (typeof p.inputField.onchange == <span class="stringliteral">"function"</span>)
00138                                 p.inputField.onchange();
00139                 }
00140                 <span class="keywordflow">if</span> (update &amp;&amp; p.displayArea)
00141                         p.displayArea.innerHTML = cal.date.print(p.daFormat);
00142                 <span class="keywordflow">if</span> (update &amp;&amp; p.singleClick &amp;&amp; cal.dateClicked)
00143                         cal.callCloseHandler();
00144                 <span class="keywordflow">if</span> (update &amp;&amp; typeof p.onUpdate == <span class="stringliteral">"function"</span>)
00145                         p.onUpdate(cal);
00146                 <span class="keywordflow">if</span> (p.saveDate) { <span class="comment">//save date in cookie</span>
00147                         <span class="comment">//unique name of the cookie is the name of the button  + href </span>
00148                         var cookieName = window.location.href + <span class="stringliteral">"--"</span> + p.button.id;
00149                         <a class="code" href="utils_8js.html#a0">Zapatec</a>.Utils.writeCookie(cookieName, p.inputField.value, null, <span class="charliteral">'/'</span>, p.saveDate);
00150                 }  
00151         };
00152 
00153         <span class="keywordflow">if</span> (params.flat != null) {
00154                 <span class="keywordflow">if</span> (typeof params.flat == <span class="stringliteral">"string"</span>)
00155                         params.flat = document.getElementById(params.flat);
00156                 <span class="keywordflow">if</span> (!params.flat) {
00157                         alert(<span class="stringliteral">"Calendar.setup:\n  Flat specified but can't find parent."</span>);
00158                         <span class="keywordflow">return</span> <span class="keyword">false</span>;
00159                 }
00160                 var cal = <span class="keyword">new</span> <a class="code" href="utils_8js.html#a0">Zapatec</a>.Calendar(params.firstDay, params.date, params.onSelect || onSelect);
00161                 cal.showsOtherMonths = params.showOthers;
00162                 cal.showsTime = params.showsTime;
00163                 cal.time24 = (params.timeFormat == <span class="stringliteral">"24"</span>);
00164                 cal.params = params;
00165                 cal.weekNumbers = params.weekNumbers;
00166                 cal.sortOrder = params.sortOrder.toLowerCase();
00167                 cal.setRange(params.range[0], params.range[1]);
00168                 cal.setDateStatusHandler(params.dateStatusFunc);
00169                 cal.getDateText = params.dateText;
00170                 <span class="keywordflow">if</span> (params.ifFormat) {
00171                         cal.setDateFormat(params.ifFormat);
00172                 }
00173                 
00174                 <span class="keywordflow">if</span> (params.inputField &amp;&amp; params.inputField.type == <span class="stringliteral">"text"</span> &amp;&amp; typeof params.inputField.value == <span class="stringliteral">"string"</span>) {
00175                         cal.parseDate(params.inputField.value);
00176                 }
00177 
00178                 <span class="keywordflow">if</span> (params.multiple) {
00179                    cal.setMultipleDates(params.multiple);
00180                 }
00181                 cal.create(params.flat);
00182                 cal.show();
00183                 <span class="keywordflow">return</span> cal;
00184         }
00185 
00186         var triggerEl = params.button || params.displayArea || params.inputField;
00187         triggerEl[<span class="stringliteral">"on"</span> + params.eventName] = function() {
00188                 var dateEl = params.inputField || params.displayArea;
00189                 var dateFmt = params.inputField ? params.ifFormat : params.daFormat;
00190                 var mustCreate = <span class="keyword">false</span>;
00191                 var cal = window.calendar;
00192                 <span class="keywordflow">if</span> (!(cal &amp;&amp; params.cache)) {
00193                         window.calendar = cal = <span class="keyword">new</span> <a class="code" href="utils_8js.html#a0">Zapatec</a>.Calendar(params.firstDay,
00194                                                              params.date,
00195                                                              params.onSelect || onSelect,
00196                                                              params.onClose || function(cal) {
00197                                                                      <span class="keywordflow">if</span> (params.cache)
00198                                                                              cal.hide();
00199                                                                      <span class="keywordflow">else</span>
00200                                                                              cal.destroy();
00201                                                              });
00202                         cal.showsTime = params.showsTime;
00203                         cal.time24 = (params.timeFormat == <span class="stringliteral">"24"</span>);
00204                         cal.weekNumbers = params.weekNumbers;
00205                         cal.historyDateFormat = params.ifFormat || params.daFormat;
00206                         mustCreate = <span class="keyword">true</span>;
00207                 } <span class="keywordflow">else</span> {
00208                         <span class="keywordflow">if</span> (params.date)
00209                                 cal.setDate(params.date);
00210                         cal.hide();
00211                 }
00212 
00213                 <span class="keywordflow">if</span> (params.multiple) {
00214                    cal.setMultipleDates(params.multiple);
00215                 }
00216                 
00217                 cal.showsOtherMonths = params.showOthers;
00218                 cal.yearStep = params.step;
00219                 cal.setRange(params.range[0], params.range[1]);
00220                 cal.params = params;
00221                 cal.setDateStatusHandler(params.dateStatusFunc);
00222                 cal.getDateText = params.dateText;
00223                 cal.setDateFormat(dateFmt);
00224                 <span class="keywordflow">if</span> (mustCreate)
00225                         cal.create();
00226                 <span class="keywordflow">if</span> (dateEl) {
00227                         var dateValue;
00228                         <span class="comment">//figure out if the it's in value or innerHTML</span>
00229                         <span class="keywordflow">if</span> (dateEl.value) {
00230                                 dateValue = dateEl.value;
00231                         } <span class="keywordflow">else</span> {
00232                                 dateValue = dateEl.innerHTML;
00233                         }
00234                         <span class="keywordflow">if</span> (dateValue != <span class="stringliteral">""</span>) { <span class="comment">//if there is a date to initialize from</span>
00235                                 var parsedDate =Date.parseDate(dateEl.value || dateEl.innerHTML, dateFmt);
00236                                 <span class="comment">//This check for when webmaster initializes the box with something like</span>
00237                                 <span class="comment">//"check in"</span>
00238                                 <span class="keywordflow">if</span> (parsedDate != null) { <span class="comment">//if it's parsable</span>
00239                                 cal.setDate(parsedDate);
00240                                 }
00241                         }
00242                 }
00243                 <span class="keywordflow">if</span> (!params.position)
00244                         cal.showAtElement(params.button || params.displayArea || params.inputField, params.align);
00245                 <span class="keywordflow">else</span>
00246                         cal.showAt(params.position[0], params.position[1]);
00247                 <span class="keywordflow">return</span> <span class="keyword">false</span>;
00248         };
00249 
00250         <span class="keywordflow">if</span> (params.closeEventName) {
00251                 triggerEl[<span class="stringliteral">"on"</span> + params.closeEventName] = function() {
00252                         <span class="keywordflow">if</span> (window.calendar)
00253                                 window.calendar.callCloseHandler();
00254                 };
00255         }
00256 
00257         return cal;
00258 };
</pre></div><div class="footer" align=center> 
	<address style="align: right;"><small>
		Generated by doxygen </small></address>
	<a href="/website/main/contact.jsp" class="lnkblue">Contact Us</a> | <a href="/website/main/employment.jsp" class="lnkblue">Employment</a> 
	<br>
	<br>
	&copy; 2004 <strong>Zapatec, Inc.</strong>

</div>
</body>
</html>
